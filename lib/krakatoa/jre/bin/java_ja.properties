#
# @(#)src/tools/sov/java_ja.properties, tool, as142, 20060816 1.17.2.1
# ===========================================================================
# Licensed Materials - Property of IBM
# "Restricted Materials of IBM"
#
# IBM SDK, Java(tm) 2 Technology Edition, v1.4.2
# (C) Copyright IBM Corp. 2002, 2004. All Rights Reserved
#
# ===========================================================================
#

#
# Java launcher messages
full.version=%2 \u5b8c\u5168\u30d0\u30fc\u30b8\u30e7\u30f3 "%1"

Could.not.create.JVM=Java \u4eee\u60f3\u30de\u30b7\u30f3\u3092\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002

Thread.detach.error=\u30e1\u30a4\u30f3\u30fb\u30b9\u30ec\u30c3\u30c9\u3092\u5207\u308a\u96e2\u305b\u307e\u305b\u3093\u3067\u3057\u305f\u3002

Option.requires.classpath=%1 \u306b\u306f\u30af\u30e9\u30b9\u30fb\u30d1\u30b9\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002

No.longer.supported=\u8b66\u544a: %1 \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3082\u306f\u3084\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002

Blank.-J.option=\u30a8\u30e9\u30fc: -J \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f8c\u306b\u30b9\u30da\u30fc\u30b9\u3092\u5165\u308c\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002

No.application.home.found=\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30db\u30fc\u30e0\u3092\u6c7a\u5b9a\u3067\u304d\u307e\u305b\u3093

Error.loading=\u6b21\u306e\u3082\u306e\u3092\u30ed\u30fc\u30c9\u4e2d\u306b\u30a8\u30e9\u30fc: %1

JNI.interfaces.not.found=\u6b21\u306e\u3082\u306e\u306e\u4e2d\u306b JNI \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093: %1

No.public.JRE=\u30ea\u30ea\u30fc\u30b9 %1 \u7528\u306e\u516c\u958b JRE \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002

JVM.not.found=Java \u4eee\u60f3\u30de\u30b7\u30f3\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093: %1

Path.too.long=\u30d1\u30b9\u304c\u9577\u3059\u304e\u307e\u3059: %1

java.error.opening.jar.file=jar \u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3057\u3088\u3046\u3068\u8a66\u307f\u3066\u3044\u308b\u3068\u304d\u306b java \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: %1

jar.file.not.found=jar \u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093: %1

class.not.found=java \u30af\u30e9\u30b9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093: %1

class.cannot.be.loaded=java \u30af\u30e9\u30b9\u3092\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002%1

No.main.method.in.class=\u30af\u30e9\u30b9\u306b main \u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u305b\u3093: %1

No.manifest.in.jar.file=jar \u30d5\u30a1\u30a4\u30eb\u306b\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u304c\u5165\u3063\u3066\u3044\u307e\u305b\u3093: %1

No.main.class.in.manifest=jar \u30d5\u30a1\u30a4\u30eb\u306b\u30e1\u30a4\u30f3\u30fb\u30af\u30e9\u30b9\u306e\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u9805\u76ee\u304c\u6b20\u843d\u3057\u3066\u3044\u307e\u3059: %1

main.not.public.in.class=class \u306e main \u30e1\u30bd\u30c3\u30c9\u304c public \u3067\u306f\u3042\u308a\u307e\u305b\u3093: %1

Option.value.invalid=JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u5024\u304c\u7121\u52b9\u3067\u3059: %1

Invalid.IBM_JAVA_OPTIONS=IBM_JAVA_OPTIONS \u306b\u7121\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059: %1

Invalid.service.option=-XService \u306b\u7121\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059: %1

JVMCI025=\u30aa\u30d7\u30b7\u30e7\u30f3\u30fb\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u307e\u305b\u3093: %1

JVMCI030=\u30aa\u30d7\u30b7\u30e7\u30f3\u30fb\u30d5\u30a1\u30a4\u30eb\u306b\u7121\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059: %1

Unrecognized.option=JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u7121\u52b9\u3067\u3059: %1

Invalid.number.of.threads=\u7121\u52b9\u306a\u30b9\u30ec\u30c3\u30c9\u6570: %1

#
# Main syntax help
#
usage=\n\
\u4f7f\u7528\u6cd5: %1 [-options] class [args...]\n\
\           (\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408)\n\
\ \u307e\u305f\u306f %1 [-jar] [-options] jarfile [args...]\n\
\           (jar \u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408)\n\
\n\
\u3053\u3053\u3067\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u306f\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\
\    -cp -classpath <%2 \u3067\u533a\u5207\u3063\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u304a\u3088\u3073 zip/jar \u30d5\u30a1\u30a4\u30eb>\n\
\              \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30af\u30e9\u30b9\u304a\u3088\u3073\u30ea\u30bd\u30fc\u30b9\u306e\u691c\u7d22\u30d1\u30b9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n\
\    -D<name>=<value>\n\
\              \u30b7\u30b9\u30c6\u30e0\u30fb\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n\
\    -verbose[:class|gc|jni]\n\
\              \u5197\u9577\u51fa\u529b\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3057\u307e\u3059\n\
\    -version  \u88fd\u54c1\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a\u3057\u307e\u3059\n\
\    -showversion  \u88fd\u54c1\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u793a\u3057\u3066\u7d9a\u884c\u3057\u307e\u3059\n\
\    -? -help  \u3053\u306e\u30d8\u30eb\u30d7\u30fb\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u307e\u3059\n\
\    -X        \u6a19\u6e96\u5916\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d8\u30eb\u30d7\u3092\u8868\u793a\u3057\u307e\u3059\n\
\    -assert   assert \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d8\u30eb\u30d7\u3092\u8868\u793a\u3057\u307e\u3059\n
#
# Additional syntax help for the assert related options
#
assert.usage=\n\
\u4ee5\u4e0b\u306e assert \u30aa\u30d7\u30b7\u30e7\u30f3\u3092 %1 \u30b3\u30de\u30f3\u30c9\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\
\    -ea[:<packagename>...|:<classname>]\n\
\    -enableassertions[:<packagename>...|:<classname>]\n\
\              \u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3057\u307e\u3059\n\
\    -da[:<packagename>...|:<classname>]\n\
\    -disableassertions[:<packagename>...|:<classname>]\n\
\              \u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u4e0d\u53ef\u306b\u3057\u307e\u3059\n\
\    -esa | -enablesystemassertions\n\
\              \u30b7\u30b9\u30c6\u30e0\u30fb\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3057\u307e\u3059\n\
\    -dsa | -disablesystemassertions\n\
\              \u30b7\u30b9\u30c6\u30e0\u30fb\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u4e0d\u53ef\u306b\u3057\u307e\u3059

#
# Additional syntax help for nonstandard JVM options
# ibm@73588 added -Xpd
#
classic.xusage= \    -Xargencoding     \u5f15\u304d\u6570\u306b Unicode \u30a8\u30b9\u30b1\u30fc\u30d7\u30fb\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\n\
\    -Xbootclasspath:<%2 \u3067\u533a\u5207\u3063\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u304a\u3088\u3073 zip/jar \u30d5\u30a1\u30a4\u30eb>\n\
\                      \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u30fb\u30af\u30e9\u30b9\u304a\u3088\u3073\u30ea\u30bd\u30fc\u30b9\u306e\u691c\u7d22\u30d1\u30b9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n\
\    -Xbootclasspath/a:<%2 \u3067\u533a\u5207\u3063\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u304a\u3088\u3073 zip/jar \u30d5\u30a1\u30a4\u30eb>\n\
\                      \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u30fb\u30af\u30e9\u30b9\u30fb\u30d1\u30b9\u306e\u7d42\u308f\u308a\u306b\u4ed8\u52a0\u3057\u307e\u3059\n\
\    -Xbootclasspath/p:<%2 \u3067\u533a\u5207\u3063\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u304a\u3088\u3073 zip/jar \u30d5\u30a1\u30a4\u30eb>\n\
\                      \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u30fb\u30af\u30e9\u30b9\u30fb\u30d1\u30b9\u306e\u524d\u306b\u4ed8\u52a0\u3057\u307e\u3059\n\
\    -Xcheck:jni       JNI \u6a5f\u80fd\u306b\u5bfe\u3059\u308b\u8ffd\u52a0\u691c\u67fb\u3092\u5b9f\u884c\u3057\u307e\u3059\n\
\    -Xcheck:nabounds  JNI \u914d\u5217\u64cd\u4f5c\u306b\u5bfe\u3059\u308b\u8ffd\u52a0\u691c\u67fb\u3092\u5b9f\u884c\u3057\u307e\u3059\n\
\    -Xcomp            \u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6700\u521d\u306e\u4f7f\u7528\u6642\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059 (z/OS \u306e\u307f)\n\
\    -Xdisableexplicitgc \u660e\u793a\u7684\u306a GC \u3092\u4f7f\u7528\u4e0d\u53ef\u306b\u3057\u307e\u3059\n\
\    -Xdisablejavadump \u30a8\u30e9\u30fc\u6642\u306b java \u30c0\u30f3\u30d7\u3067\u306a\u304f\u30b7\u30b9\u30c6\u30e0\u30fb\u30c0\u30f3\u30d7\u3092\u4f7f\u7528\u3057\u307e\u3059\n\
\    -Xlp              \u30e9\u30fc\u30b8\u30fb\u30da\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066 Java \u30d2\u30fc\u30d7\u3092\u5272\u308a\u5f53\u3066\u3088\u3046\u3068\u3059\u308b\n\
\    -Xgcpolicy[:optthruput]|[:optavgpause]\n\
\                      \u30ac\u30fc\u30d9\u30c3\u30b8\u30fb\u30b3\u30ec\u30af\u30bf\u30fc\u306e\u52d5\u4f5c\u3092\u5236\u5fa1\u3057\u307e\u3059\n\
\    -Xms<size>        \u521d\u671f Java \u30d2\u30fc\u30d7\u30fb\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n\
\    -Xmx<size>        \u6700\u5927 Java \u30d2\u30fc\u30d7\u30fb\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n\
\    -Xnoclassgc       \u30af\u30e9\u30b9\u30fb\u30ac\u30fc\u30d9\u30c3\u30b8\u30fb\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u4e0d\u53ef\u306b\u3057\u307e\u3059\n\
\    -Xcompactexplicitgc   \u5404\u5f37\u5236 GC (System.gc) \u3067\u5b8c\u5168\u5727\u7e2e\u3092\u5b9f\u884c\u3057\u307e\u3059\n\
\    -Xnocompactexplicitgc \u4efb\u610f\u306e\u5f37\u5236 GC \u3067\u5727\u7e2e\u3092\u5b9f\u884c\u3057\u307e\u305b\u3093\n\
\    -Xnosigcatch      JVM \u30ea\u30ab\u30d0\u30ea\u30fc\u30fb\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u4e0d\u53ef\u306b\u3057\u307e\u3059\n\
\    -Xnosigchain      \u30b7\u30b0\u30ca\u30eb\u30fb\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30c1\u30a7\u30fc\u30cb\u30f3\u30b0\u3092\u4f7f\u7528\u4e0d\u53ef\u306b\u3057\u307e\u3059\n\
\    -Xoptionsfile=<file> JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u304a\u3088\u3073\u5b9a\u7fa9\u304c\u5165\u3063\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\n\
\    -Xoss<size>       \u4efb\u610f\u30b9\u30ec\u30c3\u30c9\u306e\u6700\u5927 Java \u30b9\u30bf\u30c3\u30af\u30fb\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n\
\    -Xpd              \u554f\u984c\u5224\u5225 JRE \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u30ed\u30fc\u30c9\u3057\u307e\u3059\n\
\    -Xquickstart      \u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u9045\u3089\u305b\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8d77\u52d5\u6642\u9593\u3092\u6539\u5584\u3057\u307e\u3059\n\
\    -Xrs              OS \u30b7\u30b0\u30ca\u30eb\u306e\u4f7f\u7528\u3092\u6e1b\u3089\u3057\u307e\u3059\n\
\    -Xrunhprof[:help]|[:<option>=<value>, ...]\n\
\                      \u30d2\u30fc\u30d7\u3001CPU\u3001\u307e\u305f\u306f\u30e2\u30cb\u30bf\u30fc\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\u3092\u5b9f\u884c\u3057\u307e\u3059\n\
\    -Xrunjdwp[:help]|[:<option>=<value>, ...]\n\
\                      \u30ea\u30e2\u30fc\u30c8\u30fb\u30c7\u30d0\u30c3\u30b0\u7528\u306e\u30c7\u30d0\u30c3\u30b0\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u30ed\u30fc\u30c9\u3057\u307e\u3059\n\
\    -Xss<size>        \u4efb\u610f\u30b9\u30ec\u30c3\u30c9\u306e\u6700\u5927\u30cd\u30a4\u30c6\u30a3\u30d6\u30fb\u30b9\u30bf\u30c3\u30af\u30fb\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n\
\    -Xverify          \u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u30fb\u30ed\u30fc\u30c9\u306e\u53b3\u5bc6\u306a\u30af\u30e9\u30b9\u691c\u67fb\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3057\u307e\u3059\n\
\    -Xverify:none     \u53b3\u5bc6\u306a\u30af\u30e9\u30b9\u691c\u67fb\u3092\u4f7f\u7528\u4e0d\u53ef\u306b\u3057\u307e\u3059\n\
\    -Xverify:remote   \u30ea\u30e2\u30fc\u30c8\u30fb\u30af\u30e9\u30b9\u30fb\u30ed\u30fc\u30c9\u306e\u53b3\u5bc6\u306a\u30af\u30e9\u30b9\u691c\u67fb\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3057\u307e\u3059\n\
\    -Xdebug           \u30ea\u30e2\u30fc\u30c8\u306e\u30c7\u30d0\u30c3\u30b0\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3057\u307e\u3059\n\
-X \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u6a19\u6e96\u5916\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3042\u308a\u3001\u4e88\u544a\u306a\u304f\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n

#
# Additional syntax help for nonstandard JVM options(debug only)
#
classic.debug.xusage= \    -Xt               \u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u30c8\u30ec\u30fc\u30b9 (\u30c7\u30d0\u30c3\u30b0\u306e\u307f\u3001JIT \u3092\u4f7f\u7528\u4e0d\u53ef\u306b\u3057\u307e\u3059)\n\
\    -Xtm              \u30e1\u30bd\u30c3\u30c9\u306e\u30c8\u30ec\u30fc\u30b9 (\u30c7\u30d0\u30c3\u30b0\u306e\u307f\u3001JIT \u3092\u4f7f\u7528\u4e0d\u53ef\u306b\u3057\u307e\u3059)

#
# Reusable JVM option
#
reusable.xusage= \u6c38\u7d9a\u518d\u4f7f\u7528\u53ef\u80fd JVM \u3067\u4f7f\u7528\u3067\u304d\u308b\u8ffd\u52a0\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\n\
\    -Xinitth          \u4e00\u6642\u30d2\u30fc\u30d7\u306e\u521d\u671f\u30b5\u30a4\u30ba\n\
\    -Xinitsh          \u30b7\u30b9\u30c6\u30e0\u30fb\u30d2\u30fc\u30d7\u306e\u521d\u671f\u30b5\u30a4\u30ba\n\
\    -Xinitacsh        \u5171\u7528\u53ef\u80fd\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30d2\u30fc\u30d7\u306e\u521d\u671f\u30b5\u30a4\u30ba\n\
\    -Xjvmset          JVM \u30bb\u30c3\u30c8 (\u5171\u7528\u30af\u30e9\u30b9) \u3092\u4f5c\u6210\u307e\u305f\u306f\u7d50\u5408\u3057\u307e\u3059\n\
\    -Xresettable      JVM \u3092\u5fa9\u5143\u53ef\u80fd\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\u3057\u307e\u3059\n\
\n\
\u3053\u308c\u3089\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001IBM \u30de\u30cb\u30e5\u30a2\u30eb (SC34-6201-01) \u306e\u7b2c 2 \u7ae0\n\
\u300cPersistent Reusable Java Virtual Machine User's Guide\n\
(\u6c38\u7d9a\u518d\u4f7f\u7528\u53ef\u80fd Java \u4eee\u60f3\u30de\u30b7\u30f3 - \u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u300d\u306b\n\
\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\
\u3053\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u306f\u6b21\u306e Web \u30b5\u30a4\u30c8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n\
http://www-1.ibm.com/servers/eserver/zseries/software/java/pdf/prjvm14.pdf\n
#Wed Jun 14 22:40:02 EDT 2006
EXEX013=Internal VM error\: Failed to create Java VM
EXEX014=Run %s -help for usage
EXEX015=VM startup error\: Out of memory
EXEX016=Invalid jxespace parameters.
EXEX017=Error mapping jxe in flash
EXEX018=jxeaddr location 0x%08X outside of range 0x%08X to 0x%08X
EXEX019=Logical mapped addr\=0x%X for physical address at 0x%X and size 0x%X
J9VM030=Invalid UTF8 used in JNI function
J9VM031=Required class %.*s must be in the boot classpath, but was found in the application class path in %.*s
J9VM032=Fatal error\: unable to load %s\: %s
J9VM033=Fatal error\: failed to initialize %s
EXEL000=The following options are non-standard and subject to change without notice.\n
J9VM034=jvmri requires trace engine\: run with -Xtrace flag
EXEL001=\  -Xbootclasspath\:<path>    set bootstrap classpath to <path>
J9VM035=Unable to allocate OutOfMemoryError
EXEL002=\  -Xbootclasspath/p\:<path>  prepend <path> to bootstrap classpath
J9VM036=/ by zero
EXEL003=\  -Xbootclasspath/a\:<path>  append <path> to bootstrap classpath
J9VM037=Failed to allocate monitor
EXEL004=\n  -Xrun<dll>[\:options]      start JVMPI profiling\n
EXEL005=\  -Xint           run interpreted only (equivalent to -Xnojit -Xnoaot)
EXEL006=\  -Xnojit         disable the JIT
EXEL007=\  -Xnoaot         do not run precompiled code
EXEL008=\  -Xfuture        enable strictest checks, anticipating future default
EXEL009=\nArguments to the following options are expressed in bytes.
J9RI000=jvmri->CreateThread cannot allocate thread args memory
J9RI001=Internal error removing dump agent in jvmri->DumpDeregister, func may not be deregistered.
EXEX020=Missing required export
J9RI002=jvmri->DumpRegister called with null callback, func not registered.
EXEX021=Error loading jxe relocator\: %s (%s)
J9RI003=Can't allocate dump agent in jvmri->DumpRegister, func not registered.
EXEX022=Unable to load rom image from jxe.
J9RI004=jvmri->DynamicVerbosegc not supported.
J9RI005=jvmri->GetComponentDataArea component %s does not have dataArea under this vm.
J9RI006=jvmri->GetRasInfo called with null RasInfo structure.
JDBG000=-Xrunjdwp usage\: -Xrunjdwp\:[help]|[<option>\=<value>, ...]\n
J9RI007=jvmri->GetRasInfo unable to alloc memory.
JDBG001=Option Name and Value           Description                     Default
J9RI008=jvmri->GetRasInfo unable to get components.
JDBG002=---------------------           -----------                     -------
J9RI009=jvmri->GetRasInfo unable to alloc memory.
JDBG003=suspend\=y|n                     wait on startup?                y
JDBG004=transport\=<name>                transport spec                  none
JDBG005=address\=<listen/attach address> transport spec                  "localhost\:8888"
JDBG006=server\=y|n                      listen for debugger?            n
JDBG007=onthrow\=<exception name>        debug on throw                  none
JDBG008=onuncaught\=y|n                  debug on any uncaught?          n
JDBG009=j9methodids\=y|n                 use j9 method ids               n\n
EXEL010=Values suffixed with "k" (kilo) or "m" (mega) will be factored accordingly.\n
EXEL011=\  -Xmca<x>        set RAM class segment increment to <x>
EXEL012=\  -Xmco<x>        set ROM class segment increment to <x>
EXEL013=\  -Xmn<x>         set new space size to <x>
EXEL014=\  -Xmn<x>         set initial/maximum new space size to <x>
EXEL015=\  -Xmns<x>        set initial new space size to <x>
EXEL016=\  -Xmnx<x>        set maximum new space size to <x>
EXEL017=\  -Xmo<x>         set old space size to <x>
EXEL018=\  -Xmo<x>         set initial/maximum old space size to <x>
EXEL019=\  -Xmos<x>        set initial old space size to <x>
J9CL000=Incompatible class library
J9RI010=jvmri->GetRasInfo unable to alloc memory.
J9CL001=Try running with -jcl\:%s
J9RI011=RasInfo structure has unsupported type field.
J9CL002=Classes are from a non-J9 library, or an incorrectly reduced JXE
J9RI012=jvmri->ReleaseRasInfo called with null RasInfo structure.
J9CL003=Incompatible class library version\: JCL %x, VM %x
J9RI013=jvmri->ReleaseRasInfo\: structure has unsupported type field.
J9CL004=Incompatible class library version\: expected JCL v%i, found v%i
J9RI014=jvmri->RunDumpRoutine\: unable to retrieve component data.
J9CL005=Incompatible class library version\: requires VM v%i, found v%i
J9RI015=jvmri->RunDumpRoutine\: componentId is out of bounds.
J9CL006=No pre-verify data for java/lang/Object
J9RI016=jvmri->SetOutOfMemoryHook called with null callback, func not registered.
J9CL007=timeout value is negative
JDBG010=Example\: java -Xrunjdwp\:transport\=dt_socket,address\=localhost\:8000\n
J9RI017=Can't allocate dump agent in jvmri->SetOutOfMemoryHook, func not registered.
J9CL008=nanosecond timeout value out of range
JDBG011=cannot allocate debugServer
J9RI018=jvmri->NotifySignal raising signal %d.
J9CL009=Thread already started
JDBG012=j9dbg_init_server failed
J9RI019=jvmri->InjectOutOfMemory not supported.
JDBG013=cannot allocate vm->debuggerReferences pool
JDBG014=cannot allocate vm->debuggerClassReferences pool
JDBG015=Debug response server
JDBG016=jvm attach failed
JDBG017=ignoring unrecognized debug option\: '%s'
JDBG018=ignoring unrecognized debug option
JDBG019=unsorted relocation list %zx
EXEL020=\  -Xmox<x>        set maximum old space size to <x>
EXEL021=\  -Xmoi<x>        set old space increment to <x>
EXEL022=\  -Xms<x>         set old space size to <x>
EXEL023=\  -Xms<x>         set initial memory size to <x>
EXEL024=\  -Xmx<x>         set memory maximum to <x>
EXEL025=\  -Xmr<x>         set remembered set size to <x>
EXEL026=\  -Xmrx<x>        set maximum size of remembered set to <x>
EXEL027=\  -Xmso<x>        set OS thread stack size to <x>
EXEL028=\  -Xiss<x>        set initial java thread stack size to <x>
EXEL029=\  -Xss<x>         set maximum java thread stack size to <x>
J9CL010=Failed to allocate JNIEnv
J9RI020=jvmri->CreateThread unable to allocate private monitor
J9CL011=Failed to fork OS thread
J9CL012=Failed to allocate TLS
JDBG020=unrecognized debug option\: '%s'
JDBG021=unrecognized debug option
J9GC000=Internal Error, Out of Memory
J9GC001=Failed to instantiate heap
J9GC002=Failed to instantiate heap.  %zu%s requested
J9GC003=Failed to instantiate task dispatcher
VERB000=Verbose stack\: "%.*s" used %zd/%zd bytes on Java/C stacks
J9GC004=Failed to instantiate global garbage collector
VERB001=(unnamed thread)
J9GC005=Failed to initialize
EXEL030=\  -Xss<x>         set thread stack size to <x>
VERB002=Verbose stack\: maximum stack use was %zd/%zd bytes on Java/C stacks
J9GC006=Failed to initialize, out of memory
EXEL031=\  -Xmine<x>       set minimum size for heap expansion to <x>
VERB003=Error\: -Xverbosegclog number of files must be greater than 0
J9GC007=Failed to initialize, parsing command line
EXEL032=\  -Xmaxe<x>       set maximum size for heap expansion to <x>
VERB004=Error\: -Xverbosegclog number of cycles must be greater than 0
J9GC008=Failed to initialize module extensions
EXEL033=\nArguments to the following options are expressed as a decimal from 0 to 1.
VERB005=Error\: -Xverbosegclog missing filename
J9GC009=Failed to initialize mutex for GC statistics
EXEL034=A value of 0.3 represents a request of 30%%\n
VERB006=Failed to initialize
EXEL035=\  -Xminf<x>       minimum percentage of heap free after GC
EXEL036=\  -Xmaxf<x>       maximum percentage of heap free after GC
EXEL037=\nArguments to the following options are expressed a decimal numbers.\n
EXEL038=\  -Xgcthreads<x>                set number of GC threads
EXEL039=\  -Xnoclassgc                   disable dynamic class unloading
J9GC010=Failed to initialize finalizer management
J9GC011=Failed to initialize pool of memoryspaces
J9GC012=Failed to allocate VM memory segments
J9GC013=Failed to allocate VM object memory segments
J9GC014=Failed to allocate VM class memory segments
J9GC015=Failed to allocate default memory space
EXEL040=\  -Xclassgc                     enable dynamic class unloading
J9GC016=Failed to allocate survivor segment in default memory space
EXEL041=\  -Xalwaysclassgc               enable dynamic class unloading on every GC
J9GC017=%s too small, must be at least %zu %sbytes
EXEL042=\  -Xnocompactexplicitgc         disable compaction on a system GC
J9GC018=%s too small for %s
EXEL043=\  -Xcompactexplicitgc           enable compaction on every system GC
JVMP000=Attempt to instrument %.*s through JVMPI was disallowed
J9GC019=%s too large for %s
EXEL044=\  -Xcompactgc                   enable compaction
EXEL045=\  -Xnocompactgc                 disable compaction
EXEL046=\  -Xlp                          enable large page support
EXEL047=\n  -Xdbg\:<options>               enable debug, JDWP standard options
EXEL048=\  -Xrunjdwp\:<options>           enable debug, JDWP standard options
EXEL049=\  -Xdbginfo\:<symbol file path>  enable debug info server
J9GC020=%s too large for heap
J9GC021=%s must equal %s
J9GC022=Sum of %s and %s too large for %s
J9GC023=Sum of %s and %s must equal %s
J9GC024=Sum of %s and %s too large for heap
J9GC025=Sum of %s and %s
EXEL050=\  -Xrdbginfo\:<host>\:<port>      enable remote debug info server
J9GC026=-Xverbosegclog failed to allocate internal structures
EXEL051=\nWARNING\: The command line argument "%s" has been deprecated.\nWARNING\: Use "-classpath <path>" or "-cp <path>".
J9GC027=Malformed option\: '%s'
EXEL052=\nWARNING\: The command line argument "%s" has been deprecated.\nWARNING\: Use the -X equivalent.
J9GC028=Option too large\: '%s'
EXEL053=Licensed Materials - Property of IBM\n\nJ9 - VM for the Java(TM) platform, Version %s
J9GC029=Option error\: '%s'
EXEL054=(c) Copyright IBM Corp. 1991, 2004  All Rights Reserved
EXEL055=Target\: %s\n
EXEL056=IBM is a registered trademark of IBM Corp.\nJava and all Java-based marks and logos are trademarks or registered\ntrademarks of Sun Microsystems, Inc.\n
EXEL057=java version "1.3.0"\n
EXEL058=Internal VM error\: Out of memory
EXEL059=Internal VM error\: Failed to find class java/lang/String
J9GC030=%s value of %f must be at least %s less than %s value of %f
EXEL060=Internal VM error\: Failed to create byte array for class name %s
EXEL061=Internal VM error\: Failed to create java/lang/String for class name %s
EXEL062=Internal VM error\: Out of memory converting string to UTF Chars for class name %s
EXEL063=Class %s does not implement main()
EXEL064=The method main must be declared public, static and void.
EXEL065=Internal VM error\: Failed to create argument array
EXEL066=Internal VM error\: Failed to create byte array for argument %s
EXEL067=Internal VM error\: Failed to create java/lang/String for argument %s
EXEL068=Internal VM error\: Failed to set array element for %s
CDRT000=Unable to locate JIT stack map - aborting VM
EXEL069=Failed to find ROM image
CDRT001=Method\: %.*s.%.*s%.*s (%p)
CDRT002=Failing PC\: %p (offset %p), metaData \= %p
DUMP000=Dump Option unrecognised\: -Xdump\:%s
DUMP001=Dump Event unrecognised\: ...%s
DUMP002=Label Field unrecognised\: %%%c
DUMP003=Named Dump unrecognised\: %s
DUMP004=Missing Filename
DUMP005=Missing Executable
DUMP006=Processing Dump Event "%s", detail "%.*s" - Please Wait.
DUMP007=JVM Requesting %s Dump using '%s'
DUMP008=using '%s'
DUMP009=%s Dump not available
EXEL070=ROM image is wrong version
EXEL071=Failed to find main class name
EXEL072=VM startup error\: Out of memory
EXEL073=Internal VM error\: Failed to create Java VM
EXEL074=Unable to redirect console I/O to\: %s\:%d
EXEL075=\  -Xquickstart    improve startup time by delaying optimizations
DUMP010=%s Dump written to %s
DUMP011=%s Dump spawned process %d
DUMP012=Error in %s Dump\: %s
DUMP013=Processed Dump Event "%s", detail "%.*s".
DUMP014=VM Action unrecognised\: ...%s
J9VM000=Malformed value for IBM_JAVA_OPTIONS
J9VM001=Malformed value for -Xservice
J9VM002=Options file not found
J9VM003=JIT compiler "%s" not found. Will use interpreter.
J9VM004=Cannot load library required by\: %s
J9VM005=Invalid value for environment variable\: %s
J9VM006=Invalid command-line option\: %s
J9VM007=Command-line option unrecognised\: %s
J9VM008=J9VMDllMain not found
J9VM009=J9VMDllMain failed
J9VM010=Failed to initialize %s
J9VM011=Unable to load %s\: %s
J9VM012=Unable to unload %s\: %s
J9VM013=Initialization error in function %s(%d)\: %s
J9VM014=Shutdown error in function %s(%d)\: %s
J9VM015=Initialization error for library %s(%d)\: %s
ZIPS000=Unable to open %s (%s)
J9VM016=Shutdown error for library %s(%d)\: %s
ZIPS001=Unable to open %s (Missing export)
J9VM017=Could not allocate memory for command line option array
J9VM018=Could not allocate memory for DLL load table pool
J9VM019=Fatal error\: Unable to find and initialize required class %.*s
EXEX000=Usage\:\t%s [options] classname [args...]
EXEX001=Usage\:\t%s [options] -jxe\:<jxeFile> [args...]
EXEX002=\n[options]\n  -classpath <path>\n  -cp <path>       set classpath to <path>.
EXEX003=\  -jxe\:<jxeFile>   run the named jxe file.
EXEX004=\  -jxespace\:<physicalAddr>,<size>,<logicalAddr>\n                   map memory region for jxes, (values are in hex).\n  -jxeaddr\:<logicalAddr>\n                   run a jxe directly from memory, (address is in hex).
EXEX005=\  -D<prop>\=<val>   set the value of a system property.\n
EXEX006=\  -debug\:<options> enable debug, JDWP standard <options>.\n
EXEX007=\  -jcl\:<config>[\:options]\n                   specify which JCL DLL to use (e.g. cdc, cldc, ...).\n
EXEX008=\  -verbose[\:class,gc,stack,sizes]\n                   enable verbose output (default\=class).\n
JDTS000=Listening for transport dt_socket at address\: %d
EXEX009=\  -verify          enable class file verification.\n  -X               print help on non-standard options.
J9VM020=Searched in %.*s
J9VM021=Out of memory for interpreter stack map - aborting VM
J9VM022=Stack map failed, result \= %p - aborting VM
J9VM023=This may indicate that JAVA_HOME is incorrect, or that class libraries are not installed
J9VM024=Exception in thread "%.*s" 
J9VM025=\tat %.*s.%.*s (Native Method)
J9VM026=\tat %.*s.%.*s (Unknown Source)
J9VM027=\tat %.*s.%.*s (%.*s)
J9VM028=\tat %.*s.%.*s (%.*s\:%u)
J9VM029=\tat (Unknown Method)
EXEX010=%s requires a parameter
EXEX011=Error loading jxe\: %s
EXEX012=-jar option is not available for this class library
