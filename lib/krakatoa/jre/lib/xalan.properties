#
#=========================================================================
#
# IBM XSLT Processor
# Licensed Materials - Property of IBM
# (C) Copyright IBM Corp. and others 2005.   All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication, or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
#=========================================================================
#
# In most high-performance scenarios, you won't care which XML parser 
# an XSLT processor uses to parse an XML document for transformation, 
# so long as it is fast. 
#
# If you are transforming a StreamSource object, you can request that 
# the XSLTC processor use the IBM B2BXML4J parser to parse your input 
# XML document by specifying that the provider of the 
# org.apache.xalan.xsltc.dom.XSLTCDTMManager service should be the 
# com.ibm.xslt4j.b2b2dtm.XSLTCB2BDTMManager class. 
#
# The following steps are used to determine the provider of this service. 
# Each means is attempted in sequence, until one yields the service 
# provider to be used:
#
#  * first, XSLT4J will examine the system properties for the 
#    following keys:
#      - org.apache.xalan.xsltc.dom.XSLTCDTMManager
#  * next, it will try to find a file called xalan.properties in
#    the lib subdirectory of your JRE installation and look
#    for the keys above
#  * next, it will examine all the jars on your classpath to
#    try and find one with the appropriate entries in its
#    META-INF/services directory
#  * if all else fails, the default service provider, 
#    org.apache.xalan.xsltc.dom.XSLTCDTMManager, is used.
#
# By default, XSLTC will use a JAXP-compliant parser to transform a 
# StreamSource object. XSLTC detects the service provider for the 
# org.apache.xalan.xsltc.dom.XSLTCDTMManager service at the point 
# at which a javax.xml.transform.TransformerFactory instance is 
# created. Any javax.xml.transform.Transformer or 
# javax.xml.transform.sax.TransformerHandler objects created with 
# respect to that TransformerFactory will use the same service provider. 
# You can only change service providers by modifying one of the settings 
# described above and then creating a new TransformerFactory object.
#
#  ====================================================================
#
# org.apache.xalan.xsltc.dom.XSLTCDTMManager=com.ibm.xslt4j.b2b2dtm.XSLTCB2BDTMManager
